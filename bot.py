
from aiogram import Bot, Dispatcher, executor, types
import logging
import os

API_TOKEN = os.getenv("BOT_TOKEN")
SUPPORT_LINK = os.getenv("SUPPORT_LINK", "https://t.me/hamonasa")

logging.basicConfig(level=logging.INFO)
bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
@dp.message_handler(commands=['start'])
async def send_welcome(message: types.Message):
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.add("üìã –ó–∞–ø–∏—Å–∞—Ç—å—Å—è", "üõ† –Ø –º–∞—Å—Ç–µ—Ä", "üìû –°–ª—É–∂–±–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏")
    await message.answer("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=keyboard)

# –ó–∞–ø–∏—Å—å –∫–ª–∏–µ–Ω—Ç–∞
@dp.message_handler(lambda message: message.text == "üìã –ó–∞–ø–∏—Å–∞—Ç—å—Å—è")
async def handle_booking(message: types.Message):
    await message.answer("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—é:")

    @dp.message_handler()
    async def get_name(message: types.Message):
        full_name = message.text
        await message.answer("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:")

        @dp.message_handler()
        async def get_phone(message: types.Message):
            phone = message.text
            await message.answer("–í–≤–µ–¥–∏—Ç–µ –∂–µ–ª–∞–µ–º—É—é –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è:")

            @dp.message_handler()
            async def get_datetime(message: types.Message):
                dt = message.text
                await message.answer(f"–°–ø–∞—Å–∏–±–æ –∑–∞ –∑–∞–ø–∏—Å—å, {full_name}!
–¢–µ–ª–µ—Ñ–æ–Ω: {phone}
–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è: {dt}")

# –ú–∞—Å—Ç–µ—Ä—Å–∫–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
@dp.message_handler(lambda message: message.text == "üõ† –Ø –º–∞—Å—Ç–µ—Ä")
async def master_setup(message: types.Message):
    await message.answer("–í—ã –º–æ–∂–µ—Ç–µ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –≤–∞—à—É —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å —É—Å–ª—É–≥–∞–º–∏.
(–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –ø–æ–∫–∞ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ ‚Äî –¥–æ—Å—Ç—É–ø —Å–≤–æ–±–æ–¥–µ–Ω).")

# –°–ª—É–∂–±–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏
@dp.message_handler(lambda message: message.text == "üìû –°–ª—É–∂–±–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏")
async def support(message: types.Message):
    await message.answer(f"–°–≤—è–∑–∞—Ç—å—Å—è —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π: {SUPPORT_LINK}")

if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
